name: eirs
description: Developed by Ministry of Post and Telecommunications, this app will verify any mobile by its IMEI number. EIRS app will provide status (Invalid/BlackListed) or provide details like Manufacturer, Brand name and Model name of the given IMEI.While purchasing a mobile device, the genuineness of mobile devices can be verified using KYM App.

# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.2+1

environment:
  sdk: '>=2.18.6 <3.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter


  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.2
  flutter_bloc: ^8.1.1
  connectivity_plus: ^2.3.7
  retrofit: ^3.0.1+1
  dio: ^4.0.6
  json_annotation: ^4.8.0
  flutter_svg: ^1.1.6
  intl: ^0.17.0
  provider: ^6.0.0
  shared_preferences: ^2.0.6
  feature_discovery: ^0.14.1
  mobile_scanner: ^3.0.0
  device_info_plus: ^8.1.0
  sqflite: ^2.2.2
  path_provider: ^2.0.11
  package_info_plus: ^3.0.3

  # retrofit generator is an dio client generator using source_gen and inspired by Chopper and Retrofit.
  retrofit_generator: ^4.1.0+1

dev_dependencies:
  flutter_test:
    sdk: flutter

  # Automatically generate code for converting to and from JSON by annotating Dart classes.
  json_serializable: ^6.4.1
  built_value_generator: ^8.0.0

  # The build_runner package provides general-purpose commands for generating files
  build_runner: ^2.3.0

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true
  #generate: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/images/ic_time.svg
    - assets/images/ic_info.svg
    - assets/images/ic_transform.svg
    - assets/images/ic_device_info.jpg
    - assets/images/ic_cross.svg
    - assets/images/ic_cross_circle.svg
    - assets/images/ic_check_circle.svg
    - assets/images/ic_english.jpg
    - assets/images/ic_khmer.jpg
    - assets/images/ic_help.svg
    - assets/images/ic_mobile_off.svg
    - assets/images/ic_mobile_on.svg
    - assets/images/ic_app_logo.png
    - assets/images/ic_localization.svg
    - assets/images/ic_error.svg
    - assets/images/ic_no_internet.jpg
    - assets/images/ic_option_a.jpg
    - assets/images/ic_app_bar_icon.jpg

  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
     - family: OpenSans
       fonts:
         - asset: assets/fonts/OpenSans-Bold.ttf
         - asset: assets/fonts/OpenSans-Regular.ttf

  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
